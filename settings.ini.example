[LOGIN]
username = YOUR_USERNAME
password = YOUR_PASSWORD
certpassword = YOUR_CERTPASSWORD
autologin = True

[SLACK]
token = YOUR_SLACK_BOT_TOKEN
channel = #stock

[SETTINGS]
last_strategy = 

[STRATEGIES]
stg_1 = VI 발동
stg_2 = VI 발동 D1
stg_3 = 전일상한가
stg_4 = 급등주
stg_integrated = 통합 전략

# ===== 매매 평가 설정 =====
[TRADING]
# 매매 판단 주기 (초 단위, 기본값: 5초)
evaluation_interval = 5
# 이벤트 기반 평가 활성화 (틱 체결 시 즉시 평가)
event_based_evaluation = True
# 최소 평가 간격 (초, 과도한 평가 방지)
min_evaluation_gap = 3

[DATA_SAVING]
interval_seconds = 5

[BUYCOUNT]
target_buy_count = 3

[VI 발동]
buy_stg_1 = {"name": "골든크로스", "content": "(MAT5[-1] > MAT20[-1] > MAT60[-1]) and (min_close_price[-1] > MAM5[-1] > MAM10[-1]) and (OSCT[-1] > 0) and RSIT[-1] > 60 and (OSC[-1] > 0) and RSI[-1] > 60 and (tick_close_price[-1] > bb_upper[-1] * 1.02) and positive_candle and (min_close_price[-1] > VWAP[-1])"}
sell_stg_1 = {"name": "상한가 매도", "content": "all(x == y for x, y in zip(tick_high_price[-3:], tick_low_price[-3:])) and (tick_high_price[-1] == tick_high_price[-2] == tick_high_price[-3])"}
sell_stg_2 = {"name": "stop_loss 매도", "content": "tick_close_price[-1] < self.trader.highest_price[code] * 0.995 and self.stock_rate > 0.3"}
sell_stg_3 = {"name": "OSCT 음수 전환", "content": "(OSCT[-2] < OSCT[-1] < 0)"}

[VI 발동 D1]
buy_stg_1 = {"name": "시초가", "content": "(tick_close_price[-1] > day_open_price[-1]) and (MAT60[-3] < MAT60[-2] < MAT60[-1]) and (MAT120[-3] < MAT120[-2] < MAT120[-1]) and (MA5[-1] > MA10[-1] > MA20[-1]) and (min_close_price[-1] > MA10[-1]) and (OSC[-2] < OSC[-1]) and (OSC[-1] > 0)"}
sell_stg_1 = {"name": "상한가 매도", "content": "all(x == y for x, y in zip(tick_high_price[-3:], tick_low_price[-3:])) and (tick_high_price[-1] == tick_high_price[-2] == tick_high_price[-3])"}
sell_stg_2 = {"name": "stop_loss 매도", "content": "tick_close_price[-1] < self.trader.highest_price[code] * 0.993 and self.stock_rate > 0.3"}

[전일상한가]
buy_stg_1 = {"name": "전일 상한가 시초가", "content": "(MAT5[-1] > MAT20[-1] > MAT60[-1]) and positive_candle"}
sell_stg_1 = {"name": "상한가 매도", "content": "all(x == y for x, y in zip(tick_high_price[-3:], tick_low_price[-3:])) and (tick_high_price[-1] == tick_high_price[-2] == tick_high_price[-3])"}
sell_stg_2 = {"name": "stop_loss 매도", "content": "tick_close_price[-1] < self.trader.highest_price[code] * 0.993 and self.stock_rate > 0.3"}

[급등주]
buy_stg_1 = {"name": "골든크로스", "content": "(MAT5[-1] > MAT20[-1]) and (min_close_price[-1] > MAM5[-1] > MAM10[-1]) and (OSCT[-1] > 0) and RSIT[-1] > 60 and (OSC[-1] > 0) and RSI[-1] > 60 and (tick_close_price[-1] > bb_upper[-1] * 1.02) and positive_candle and (min_close_price[-1] > VWAP[-1])"}
sell_stg_1 = {"name": "상한가 매도", "content": "all(x == y for x, y in zip(tick_high_price[-3:], tick_low_price[-3:])) and (tick_high_price[-1] == tick_high_price[-2] == tick_high_price[-3])"}
sell_stg_2 = {"name": "데드크로스", "content": "(min_close_price[-1] < MAM5[-1]) or (MAT5[-1] < MAT20[-1])"}
sell_stg_3 = {"name": "OSCT 음수 전환", "content": "(OSCT[-2] < OSCT[-1] < 0)"}
sell_stg_4 = {"name": "stop_loss 매도", "content": "tick_close_price[-1] < self.trader.highest_price[code] * 0.993 and self.stock_rate > 0.3"}

[통합 전략]
buy_stg_1 = {"name": "급등주 모멘텀", "content": "strength >= 120 and momentum_score >= threshold and MAT5 > MAT20 and C > VWAP"}
buy_stg_2 = {"name": "변동성 돌파", "content": "volatility_breakout"}
buy_stg_3 = {"name": "갭 상승", "content": "gap_hold and strength >= 120 and MAT5 > MAT20"}
sell_stg_1 = {"name": "손절매", "content": "current_profit_pct < -0.7"}
sell_stg_2 = {"name": "시간 손절", "content": "hold_minutes > 60 and current_profit_pct < 0"}
sell_stg_3 = {"name": "장마감 청산", "content": "after_market_close"}
sell_stg_4 = {"name": "분할 익절", "content": "current_profit_pct >= 1.5 and code not in self.trader.sell_half_set"}
sell_stg_5 = {"name": "추적 손절", "content": "(code in self.trader.sell_half_set and from_peak_pct < -0.5) or (current_profit_pct > 0.5 and from_peak_pct < -1.0)"}
sell_stg_6 = {"name": "데드크로스", "content": "min_close < MAM5 or MAM5 < MAM10"}
sell_stg_7 = {"name": "OSCT 음전환", "content": "osct_negative"}